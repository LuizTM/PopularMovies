# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    begin
        on_test
    rescue => exception
        on_error(exception)
    end
  end

  desc "build debug"
  lane :buildDebug do
      begin
          test
          gradle(task: "assembleDebug")
          on_msg_success
          upload_to_hockeyapp
      rescue => exception
          on_error(exception)
      end
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease")
    crashlytics
  
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end
end


def on_test
    gradle(task: "clean test")
end


def on_error(exception)
       slack(
             message: "Some thing goes wrong",
             channel: "#general",
             success: false,
             slack_url: "https://hooks.slack.com/services/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",
             attachment_properties: {
                            fields: [
                                {
                                    title: "Error message",
                                    value: exception
                                }
                            ]
                        }
       )
end

def upload_to_hockeyapp

    hockey(
      api_token: "921030b600314fbcb88574002d59fa6b",
      apk: ENV["PATH_APK"],
      #"/Users/luiztadeu/Desktop/Nanodegree/PopularMoviesFastlane/app/build/outputs/apk/debug/app-debug.apk",
      notes: "Changes: " + " " + last_git_commit[:message]
    )

end

def on_msg_success

       slack(
             message: "That's full!",
             channel: "#general",
             success: true,
             slack_url: "https://hooks.slack.com/services/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",
             default_payloads: [:git_branch, :last_git_commit_message],
             attachment_properties: {
                    fields: [
                        {
                            title: "Build number",
                            value: ENV["BUILD_NUMBER"],
                        },
                        {
                            title: "Artifacts URL",
                            value: "https://rink.hockeyapp.net/apps/3d42099831224696950c1ac721520971",
                        }
                    ]
                }
       )
end